package com.github.sol239.javafi.backend.entity;

import jakarta.persistence.*;
import lombok.*;

import java.util.Set;

/**
 * Represents a user in the system.
 * Contains fields for username, password, enabled status, and roles.
 */
@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Table(name = "users")
public class User {

    /**
     * Unique identifier for the user.
     * Automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Username of the user.
     * Must be unique and cannot be null.
     */
    @Column(nullable = false, unique = true)
    private String username;

    /**
     * Password of the user.
     * Cannot be null.
     */
    @Column(nullable = false)
    private String password;

    /**
     * Indicates whether the user account is enabled.
     * Defaults to true.
     */
    @Column(nullable = false)
    private boolean enabled = true;

    /**
     * Set of roles assigned to the user.
     * Used for authorization purposes.
     * Fetch type is EAGER to load roles immediately with the user.
     */
    @ElementCollection(fetch = FetchType.EAGER)
    @CollectionTable(name = "user_roles", joinColumns = @JoinColumn(name = "user_id"))
    @Column(name = "role")
    private Set<String> roles;
}
